# Ensure XDG environment
export XDG_BIN_HOME="$HOME/.local/bin"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_STATE_HOME="$HOME/.local/state"
if [ -n "${TMPDIR}" ] && [ -d "${TMPDIR}" ]; then
    export XDG_RUNTIME_DIR="$TMPDIR"
else
    export XDG_RUNTIME_DIR="/tmp"
fi

{{- $brewDir := includeTemplate "get_command_dir" "brew" -}}
{{- $hasRustup := false -}}
{{- if not (empty $brewDir)  }}

{{-   $hasRustup = not (empty (includeTemplate "is_command_installed"
        "rustup"))  }}
{{-   if and $hasRustup .flags.isPersonalHost .flags.isPersonalUser  }}
{{-     $cargoDir := output "bash" "-c"
          "brew --prefix rustup 2>/dev/null || true"  }}
{{-     if not (empty $cargoDir)  }}
{{-       $cargoDir = joinPath (trim $cargoDir) "bin"  }}

# Add rustup's bin dir to path PRIOR to homebrew's bin dir
export PATH="{{ $cargoDir }}:$PATH"
{{-     end  }}
{{-   end  }}

# Wire-up homebrew environment
{{- $brewBin := joinPath $brewDir "brew"  }}
if command -v {{ $brewBin }} >/dev/null 2>&1; then
    eval "$({{ $brewBin }} shellenv bash)"
fi
export HOMEBREW_NO_ANALYTICS="1"
export HOMEBREW_NO_ENV_HINTS="1"
{{- end  }}

{{- if and (includeTemplate "is_command_installed" "orbctl")
      .flags.isPersonalHost .flags.isPersonalUser  }}

# Setup orbstack/docker environment
if command -v orbctl >/dev/null 2>&1; then
    if [ -r "$HOME/.orbstack/shell/init.bash" ]; then
        source "$HOME/.orbstack/shell/init.bash" 2>/dev/null || true
    fi
    export DOCKER_CONFIG="$XDG_CONFIG_HOME/docker"
fi
{{- end  }}

{{- if and (includeTemplate "is_command_installed" "python3")
      .flags.isPersonalHost .flags.isPersonalUser  }}

# Ensure a python virtual environment
if command -v python3 >/dev/null 2>&1; then
    if [ ! -r "$XDG_CONFIG_HOME/venv/bin/activate" ]; then
        python3 -m venv install "$XDG_CONFIG_HOME/venv"
    fi
    export VIRTUAL_ENV_DISABLE_PROMPT="1"
    source "$XDG_CONFIG_HOME/venv/bin/activate"
fi
{{- end  }}

# Prepend user directories to path
{{- if and $hasRustup .flags.isPersonalHost .flags.isPersonalUser  }}
export PATH="$XDG_DATA_HOME/cargo/bin:$PATH"
{{- end  }}
export PATH="$XDG_BIN_HOME:$PATH"

# Exit unless interactive
[[ $- != *i* ]] && return

# Setup user environment
export EDITOR="vim"
export PAGER="less -R"
export TERM="xterm-256color"
export VISUAL="${EDITOR}"

# Setup misc environment
{{- if and $hasRustup .flags.isPersonalHost .flags.isPersonalUser  }}
export CARGO_HOME="$XDG_DATA_HOME/cargo"
{{- end  }}
{{- if and (includeTemplate "is_command_installed" "ghcup")
      .flags.isPersonalHost .flags.isPersonalUser  }}
export GHCUP_USE_XDG_DIRS="true"
{{- end  }}
export HISTFILE="$XDG_STATE_HOME/bash/history"
export LESSHISTFILE="$XDG_STATE_HOME/less/history"
{{- if and $hasRustup .flags.isPersonalHost .flags.isPersonalUser  }}
export RUSTUP_HOME="$XDG_DATA_HOME/rustup"
{{- end  }}
{{- if and (includeTemplate "is_command_installed" "sqlite3")
      .flags.isPersonalHost .flags.isPersonalUser  }}
export SQLITE_HISTORY="$XDG_STATE_HOME/sqlite/history"
{{- end  }}

{{- if and (includeTemplate "is_command_installed" "direnv")
      .flags.isPersonalHost .flags.isPersonalUser  }}

# Wire-up direnv
if command -v direnv >/dev/null 2>&1; then
    eval "$(direnv hook bash)"
fi
{{- end  }}

{{- if and (includeTemplate "is_command_installed" "fzf")
      .flags.isPersonalUser  }}

# Wire-up fzf
if command -v fzf >/dev/null 2>&1; then
    eval "$(fzf --bash)"
fi
{{- end  }}

{{- if and (includeTemplate "is_command_installed" "zoxide")
      .flags.isPersonalUser  }}

# Wire-up zoxide
if command -v zoxide >/dev/null 2>&1; then
    eval "$(zoxide init bash)"
fi
{{- end  }}
