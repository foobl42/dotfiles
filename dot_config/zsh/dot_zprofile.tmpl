# Ensure current path is unique
typeset -U PATH path

{{- $brewDir := includeTemplate "get_command_dir" "brew" -}}
{{- $hasRustup := false -}}
{{- if not (empty $brewDir)  }}

{{-   $hasRustup = not (empty (includeTemplate "is_command_reachable"
        "rustup"))  }}
{{-   if and $hasRustup .flags.isPersonalHost .flags.isPersonalUser  }}
{{-     $cargoDir := output "bash" "-c"
          "brew --prefix rustup 2>/dev/null || true"  }}
{{-     if not (empty $cargoDir)  }}
{{-       $cargoDir = joinPath (trim $cargoDir) "bin"  }}

# Add rustup's bin dir to path PRIOR to homebrew's bin dir
path=("{{ $cargoDir }}" $path)
{{-     end  }}
{{-   end  }}

# Wire-up homebrew environment
eval "$({{ joinPath $brewDir "brew" }} shellenv zsh)"
export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_NO_ENV_HINTS=1
{{- end  }}


{{- if and
      (includeTemplate "is_command_reachable" "orbctl")
      .flags.isPersonalHost .flags.isPersonalUser  }}

# Setup orbstack/docker environment
if command -v orbctl >/dev/null 2>&1; then
    if [[ -r "$HOME/.orbstack/shell/init.zsh" ]]; then
        source "$HOME/.orbstack/shell/init.zsh" 2>/dev/null || true
    fi
    export DOCKER_CONFIG="$XDG_CONFIG_HOME/docker"
fi
{{- end  }}

{{-   if and
        (includeTemplate "is_command_reachable" "python3")
        .flags.isPersonalHost .flags.isPersonalUser  }}

# Ensure a python virtual environment
if command -v python3 >/dev/null 2>&1; then
    if [[ ! -r "$XDG_CONFIG_HOME/venv/bin/activate" ]]; then
        python3 -m venv install "$XDG_CONFIG_HOME/venv"
    fi
    export VIRTUAL_ENV_DISABLE_PROMPT="1"
    source "$XDG_CONFIG_HOME/venv/bin/activate"
fi
{{-   end  }}

# Prepend user directories to path
{{- if and $hasRustup .flags.isPersonalHost .flags.isPersonalUser  }}
path=("$XDG_DATA_HOME/cargo/bin" $path)
{{- end  }}
path=("$XDG_BIN_HOME" $path)

{{- if .flags.isMacOS  }}

# Disable shell sessions (macos)
export SHELL_SESSIONS_DISABLE=1
{{- end  }}
