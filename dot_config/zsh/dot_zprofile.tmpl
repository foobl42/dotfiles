# Ensure current path is unique
typeset -U PATH path


{{- $brewDir := includeTemplate "get_command_dir" "brew" -}}
{{- $hasRustup := false -}}
{{- if not (empty $brewDir)  }}

{{-   if not (includeTemplate "is_command_installed" "python")  }}
{{-     $pythonDir := output "bash" "-c"
          "brew --prefix python3 2>/dev/null || true"  }}
{{-     if not (empty $pythonDir)  }}
{{-       $pythonDir = joinPath (trim $pythonDir) "libexec" "bin"  }}

# Add (brew-installed) python3's libexec/bin dir to path
path=("{{ $pythonDir }}" $path)
{{-     end  }}
{{-   end  }}

{{-   $hasRustup = not (empty (includeTemplate "get_command_bin" "rustup"))  }}
{{-   if and $hasRustup
        (hasKey .flags "hasConfigData")
        .flags.isPersonalUser  }}
{{-     $rustupDir := output "bash" "-c"
          "brew --prefix rustup 2>/dev/null || true"  }}
{{-     if not (empty $rustupDir)  }}
{{-       $rustupDir = joinPath (trim $rustupDir) "bin"  }}

# Add rustup's bin dir to path PRIOR to homebrew's bin dir
path=("{{ $rustupDir }}" $path)
{{-     end  }}
{{-   end  }}

# Wire-up homebrew environment
eval "$({{ joinPath $brewDir "brew" }} shellenv zsh)"
export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_NO_ENV_HINTS=1
{{- end  }}

{{- if and
      (not (empty (includeTemplate "get_command_bin" "orbctl")))
      (hasKey .flags "hasConfigData")
      .flags.isPersonalUser  }}

# Setup orbstack/docker environment
if [[ -f ~/.orbstack/shell/init.zsh ]]; then
    source ~/.orbstack/shell/init.zsh 2>/dev/null || :
fi
export DOCKER_CONFIG="$XDG_CONFIG_HOME/docker"
{{- end  }}

# Prepend user directories to path
{{- if and $hasRustup
      (hasKey .flags "hasConfigData")
      .flags.isPersonalUser  }}
path=("$XDG_DATA_HOME/cargo/bin" $path)
{{- end  }}
path=("$XDG_BIN_HOME" $path)

{{- if .flags.isMacOS  }}

# Disable shell sessions (macos)
export SHELL_SESSIONS_DISABLE=1
{{- end  }}
